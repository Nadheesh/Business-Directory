<!DOCTYPE HTML>

<html lang="en">
<head>
    <!-- Force latest IE rendering engine or ChromeFrame if installed -->
    <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><![endif]-->
    <meta charset="utf-8">
    <title>jQuery File Upload Demo - Basic Plus version</title>
    <meta name="description" content="File Upload widget with multiple file selection, drag&amp;drop support, progress bar, validation and preview images, audio and video for jQuery. Supports cross-domain, chunked and resumable file uploads. Works with any server-side platform (Google App Engine, PHP, Python, Ruby on Rails, Java, etc.) that supports standard HTML form file uploads.">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap styles -->
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
    <!-- Generic page styles -->
    <link rel="stylesheet" href="{{ asset('bundles/bd/jQuery-File-Upload/css/style.css') }}">
    <!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
    <link rel="stylesheet" href="{{ asset('bundles/bd/jQuery-File-Upload/css/jquery.fileupload.css') }}">

    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">


    <style>
        #feedback { font-size: 1.4em; }
        #selectable .ui-selecting { background: #FECA40; }
        #selectable .ui-selected { background: #F39814; color: white; }
        #selectable { list-style-type: none; margin: 0; padding: 0; width: 60%; }
        #selectable li { margin: 3px; padding: 0.4em; font-size: 1.4em;  }
    </style>
    <style>
        .round-button {
            display:block;
            width:20px;
            height:20px;
            line-height:50px;
            border: 1px solid #f5f5f5;
            border-radius: 50%;
            color:#f5f5f5;
            text-align:center;
            text-decoration:none;
            background: #464646;
            box-shadow: 0 0 3px gray;
            font-size:20px;
            font-weight:bold;
        }
        .round-button:hover {
            background: #262626;
        }
    </style>
</head>

<body>


<div class="container">

    <span id="select-result">none</span>

    <br>
    <!-- The fileinput-button span is used to style the file input field as button -->
    <span class="btn btn-success fileinput-button">
        <i class="glyphicon glyphicon-plus"></i>
        <span>Add files...</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload" type="file" name="files[]" >
    </span>
    <br>
    <br>

    <div>

        <div>
            <!-- The global progress bar -->
            <div id="progress1" class="progress">
                <div class="progress-bar progress-bar-success"></div>
            </div>
            <!-- The container for the uploaded files -->
            <div id="files" class="files">

                <div class="row" style="background-color: #f1f1f1">
                    <div class="col-md-3">
                        <div id= "slide0" style="padding-top: 5%">
                            <canvas id="slide" style="height: 100px; width: 100px;"></canvas>
                        </div>

                    </div>

                    <div class="col-md-6">

                    </div>
                </div>


            </div>
        </div>

        <br>

        <div>
            <!-- The global progress bar -->
            <div id="progress" class="progress">
                <div class="progress-bar progress-bar-success"></div>
            </div>
            <!-- The container for the uploaded files -->
            <div id="files" class="files">

                <div class="row" style="background-color: #f1f1f1">
                    <div id= "slide1" class="col-md-3" style="padding-top: 5%">
                        <canvas id="slide"></canvas>
                    </div>
                    <div class="col-md-6">

                    </div>
                </div>


            </div>
        </div>

        <br>

        <div>
            <!-- The global progress bar -->
            <div id="progress" class="progress">
                <div class="progress-bar progress-bar-success"></div>
            </div>
            <!-- The container for the uploaded files -->
            <div id="files" class="files">

                <div class="row" style="background-color: #f1f1f1">
                    <div id= "slide2" class="col-md-3" style="padding-top: 5%">
                        <canvas id="slide"></canvas>
                    </div>
                    <div class="col-md-6">

                    </div>
                </div>


            </div>
        </div>

        <br>


    </div>


    <br>

</div>




<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="{{ asset('bundles/bd/jQuery-File-Upload/js/vendor/jquery.ui.widget.js') }}"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="{{ asset('bundles/bd/jQuery-File-Upload/js/jquery.iframe-transport.js') }}"></script>
<!-- The basic File Upload plugin -->
<script src="{{ asset('bundles/bd/jQuery-File-Upload/js/jquery.fileupload.js') }}"></script>
<!-- The File Upload processing plugin -->
<script src="{{ asset('bundles/bd/jQuery-File-Upload/js/jquery.fileupload-process.js') }}"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="{{ asset('bundles/bd/jQuery-File-Upload/js/jquery.fileupload-image.js') }}"></script>
<!-- The File Upload audio preview plugin -->
<script src="{{ asset('bundles/bd/jQuery-File-Upload/js/jquery.fileupload-audio.js') }}"></script>
<!-- The File Upload video preview plugin -->
<script src="{{ asset('bundles/bd/jQuery-File-Upload/js/jquery.fileupload-video.js') }}"></script>
<!-- The File Upload validation plugin -->
<script src="{{ asset('bundles/bd/jQuery-File-Upload/js/jquery.fileupload-validate.js') }}"></script>





<script>
    var canvas = document.getElementById('slide');
    var context = canvas.getContext('2d');
    var x = 0;
    var y = 0;
    var width = 300;
    var height = 150;
    var imageObj = new Image();

    imageObj.onload = function() {
        context.drawImage(imageObj, x, y, width, height);
    };
    imageObj.src = '{{ asset('bundles/bd/imageStorage/www.gmail1.com/slider/5740a1ee18fbb.JPG') }}';
</script>

<script>
//    var index = -1 ;
//
//    $(function() {
//        $( "#selectable" ).selectable({
//            stop: function() {
//                var result = $( "#select-result" ).empty();
//                $( ".ui-selected", this ).each(function() {
//                    index = $( "#selectable li" ).index( this );
//                    result.append( " #" + ( index + 1 ) );
//                });
//            }
//        });
//    });
    $(function () {
        setFileUploader('#fileupload','{{ oneup_uploader_endpoint('gallery') }}','','#slide0',"#slide0_btn",'#progress1');
    })

    function setFileUploader (addButton,url,urlFieldName,canvasDiv,uButton,progressBar) {
        'use strict';
        // Change this to the location of your server-side upload handler:
        var url = url,
                uploadButton= $('<button/>')
                        .addClass('btn btn-primary')
                        .prop('disabled', true)
                        .text('Processing...')
                        .on('click', function () {
                            var $this = $(this),
                                    data = $this.data();
                                    $this
                                        .off('click')
                                        .on('click', function () {
                                            $this.remove();
                                            data.abort();
                                        });
                            $this.html('<span class="glyphicon glyphicon-remove"></span>')
                            data.submit().always(function () {
                                $this.remove();
                            });
                        });


            $(addButton).fileupload({
                url: url,
                dataType: 'json',
                autoUpload: false,
                acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                maxFileSize: 999000,
                // Enable image resizing, except for Android and Opera,
                // which actually support image resizing, but fail to
                // send Blob objects via XHR requests:
                disableImageResize: /Android(?!.*Chrome)|Opera/
                        .test(window.navigator.userAgent),
                previewMaxWidth: 100,
                previewMaxHeight: 100,
                previewCrop: true

            }).on('fileuploadadd', function (e, data) {
                var selector = canvasDiv;
                $(selector).empty();
                //$('canvas:nth-of-type(1)').remove();
                data.context = $(selector);
                $.each(data.files, function (index, file) {
                    var node = $('<p/>')
                            .append($('<span/>').text(file.name));
                    if (!index) {
                        $(uButton).prop('disabled', false).data(data);
                        node
                                .append('<br>')
                                .append(uploadButton.clone(true).data(data));
                    }
                    node.appendTo(data.context);
                });
            }).on('fileuploadprocessalways', function (e, data) {
                var index = data.index,
                        file = data.files[index],
                        node = $(data.context.children()[index]);
                if (file.preview) {
                    node
                            .prepend('<br>')
                            .prepend(file.preview);
                }
                if (file.error) {
                    node
                            .append('<br>')
                            .append($('<span class="text-danger"/>').text(file.error));
                }
                if (index + 1 === data.files.length) {
                    data.context.find('button')
                            .html('<span class="glyphicon glyphicon-ok"></span>')
                            .prop('disabled', !!data.files.error);
                }
            }).on('fileuploadprogressall', function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $(progressBar+' .progress-bar').css(
                        'width',
                        progress + '%'
                );
            }).on('fileuploaddone', function (e, data) {
                $(progressBar+' .progress-bar').delay(5000)
                        .css(
                                'width',
                                0 + '%'
                        );

                var file = data.result.file;
                if (file.url) {
                    alert(file.url);
                    var link = $('<a>')
                            .attr('target', '_blank')
                            .prop('href', file.url);
                    $(data.context).wrap(link);
                } else if (file.error) {
                    var error = $('<span class="text-danger"/>').text(file.error);
                    $(data.context)
                            .append('<br>')
                            .append(error);
                }
            }).on('fileuploadfail', function (e, data) {
                $.each(data.files, function (index) {
                    var error = $('<span class="text-danger"/>').text('File upload failed.');
                    $(data.context.children()[index])
                            .append('<br>')
                            .append(error);
                });
            }).prop('disabled', !$.support.fileInput)
                    .parent().addClass($.support.fileInput ? undefined : 'disabled');

    };
</script>
</body>
</html>
